<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// default parameters

performer   = noone;
target      = noone;
lifetime    = global.POPUP_showTime;
depth       = global.info_depth;
performer_artIndex = 0;
target_artIndex = 0;

artWidth  = sprite_get_width(spr_defaultArt);
artHeight = sprite_get_height(spr_defaultArt);



var center  = ( room_width  * 0.5 );
var middle  = ( room_height * 0.5 );
performerX  = (center - (artWidth * 1.5) );
performerY  = (middle - (artHeight * 0.5) );
targetX     = (center + (artWidth * 0.5) );
targetY     = (middle - (artHeight * 0.5) );

var backgroundMargin = 20;
backgroundX     = (performerX - backgroundMargin);
backgroundY     = (performerY - backgroundMargin);
backgroundEndX  = (targetX + artWidth + backgroundMargin);
backgroundEndY  = (targetY + artHeight + backgroundMargin);
backgroundColour = make_colour_rgb(10, 0, 0);
backgroundAlpha = 0.8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Trigger the event itself

with (performer) {
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// countdown lifetime

lifetime--;

if (lifetime &lt;= 0) {
    instance_destroy(self, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the event info

draw_set_alpha(backgroundAlpha);
draw_rectangle_colour(backgroundX, backgroundY, backgroundEndX, backgroundEndY, backgroundColour, backgroundColour, backgroundColour, backgroundColour, false);
draw_set_alpha(1);

var perfomer_artIndex = performer.artVariant;
var target_artIndex = spr_defaultArt;
var performerImage;
var targetImage;

if (object_is_ancestor(performer.object_index, CONTESTANT)) {
    performerImage = spr_profiles;
    performer_artIndex = performer.artVariant;
} else {
    performerImage = performer.image;
}


if (object_is_ancestor(target.object_index, CONTESTANT)) {
    targetImage = spr_profiles;
    target_artIndex = target.artVariant;
} else {
    targetImage = target.image;
}

draw_sprite(performerImage, performer_artIndex,  performerX,  performerY);
draw_sprite(targetImage, target_artIndex, targetX, targetY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
