<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hourglass</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>GUI_BUTTON</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup
event_inherited();

showPhaseBanner = false;
bannerTimer = 0;
bannerTimerMax = 90;
bannerX = (room_width * 0.5);
bannerY = (room_height * 0.5);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (clicked) {
    clicked = false;
    next_phase();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// animation
event_inherited();

draw_self();

draw_set_color(c_red);
draw_set_font(font_health);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

if (showPhaseBanner) {
    bannerTimer--;
    if (bannerTimer &lt;= 0) {
        showPhaseBanner = false;
    }
    
    
    if (global.GAME_PHASE = "draw") {
        draw_text(bannerX, bannerY, "DRAW PHASE");
    }
    
    if (global.GAME_PHASE = "payment") {
        draw_text(bannerX, bannerY, "PAYMENT PHASE");
    }
    
    if (global.GAME_PHASE = "main1") {
        draw_text(bannerX, bannerY, "MAIN PHASE 1");
    }
    
    if (global.GAME_PHASE = "combat") {
        draw_text(bannerX, bannerY, "COMBAT PHASE");
    }
    
    if (global.GAME_PHASE = "main2") {
        draw_text(bannerX, bannerY, "MAIN PHASE 2");
    }
    
    if (global.GAME_PHASE = "endturn") {
        draw_text(bannerX, bannerY, "END TURN");
    }
}

// reset_text();
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
