<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
depth = global.GUI_depth;
var margin = 10;

// profiles
profileWidth    = sprite_get_width(spr_profiles);
profileHeight   = sprite_get_height(spr_profiles);
enemyProfileX   = ((view_wview[0] - margin) - profileWidth);
enemyProfileY   = (0 + margin);
playerProfileX  = (0 + margin);
playerProfileY  = ((view_hview[0] - margin) - profileHeight);

imageOffsetX = 22;
imageOffsetY = 43;

// health crescents
playerCrescentX = 6;
playerCrescentY = playerProfileY + 174;
enemyCrescentX = 925;
enemyCrescentY = 187;

// deck count
playerDeckCounterX  = (playerProfileX + 1);
playerDeckCounterY  = (playerProfileY + 1);
enemyDeckCounterX   = (enemyProfileX + profileWidth - sprite_get_width(spr_deckcount) -1);
enemyDeckCounterY   = (enemyProfileY + 1)


// show/hide hand button
showHand = true;
instance_create(
    playerProfileX + 20 + (profileWidth - sprite_get_width(spr_button_show_hand)),
    playerProfileY + (profileHeight - sprite_get_height(spr_button_show_hand)),
    button_showPlayerHand
);

// show graveyard button
showPlayerGraveyardX = playerProfileX + profileWidth - sprite_get_width(spr_show_graveyard);
showPlayerGraveyardY = playerProfileY + 125;
instance_create(showPlayerGraveyardX, showPlayerGraveyardY, button_showPlayerGraveyard);




/// ENEMY BUTTONS
// show/hide hand button
showHand = true;
instance_create(
    enemyProfileX,
    enemyProfileY + (profileHeight - sprite_get_height(spr_button_show_hand)),
    button_showEnemyHand
);

// show graveyard button
showPlayerGraveyardX = enemyProfileX;
showPlayerGraveyardY = enemyProfileY + 125;
instance_create(showPlayerGraveyardX, showPlayerGraveyardY, button_showEnemyGraveyard);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the GUI

// draw the player profile pictures
draw_sprite(spr_profiles, 0, enemyProfileX,  enemyProfileY);
draw_sprite(spr_profiles, 1, playerProfileX, playerProfileY);

draw_sprite(spr_gui_crescent, 0, playerCrescentX, playerCrescentY);
draw_sprite(spr_gui_crescent, 0, enemyCrescentX, enemyCrescentY);

// Deck Counts
draw_set_font(font_cardcount);
draw_set_colour(c_orange);
draw_set_halign(fa_center);
draw_sprite(spr_deckcount, 0, playerDeckCounterX, playerDeckCounterY);
draw_text(playerDeckCounterX + 20, playerDeckCounterY + 2, ds_stack_size(global.player.deck.playStack));
draw_sprite(spr_deckcount, 0, enemyDeckCounterX, enemyDeckCounterY);
draw_text(enemyDeckCounterX + 20, enemyDeckCounterY + 2, ds_stack_size(global.enemy.deck.playStack));

// HP
draw_set_font(font_health);
draw_set_colour(c_lime);
draw_text(playerCrescentX + 30, playerCrescentY, global.player.hp);
draw_text(enemyCrescentX + 30, enemyCrescentY, global.enemy.hp);

// reset text
draw_set_font(font_normal);
draw_set_halign(fa_left);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
