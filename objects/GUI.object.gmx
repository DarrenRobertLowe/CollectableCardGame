<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
depth = global.GUI_depth;
var margin = 10;

// profiles
playerDeckImage = global.player.deck.sprite_index;
enemyDeckImage  = global.enemy.deck.sprite_index;
profileWidth    = sprite_get_width(global.player.deck.sprite_index);
profileHeight   = sprite_get_height(global.player.deck.sprite_index);
enemyProfileX   = ((view_wview[0] - margin) - profileWidth);
enemyProfileY   = (0 + margin);
playerProfileX  = (0 + margin);
playerProfileY  = ((view_hview[0] - margin) - profileHeight);

imageOffsetX = 22;
imageOffsetY = 43;

// health crescents
playerCrescentX = 6;
playerCrescentY = playerProfileY + 174;
enemyCrescentX = 925;
enemyCrescentY = 187;

// health text
var middleX  = sprite_get_width(spr_gui_crescent) * 0.5;
var middleY  = sprite_get_height(spr_gui_crescent) * 0.5;
playerHPX   = (playerCrescentX + middleX);
playerHPY   = (playerCrescentY);// + middleY);
enemyHPX    = (enemyCrescentX  + middleX);
enemyHPY    = (enemyCrescentY);//  + middleY);


// deck count
playerDeckCounterX  = (playerProfileX + 1);
playerDeckCounterY  = (playerProfileY + 1);
enemyDeckCounterX   = (enemyProfileX + profileWidth - sprite_get_width(spr_deckcount) -1);
enemyDeckCounterY   = (enemyProfileY + 1)


// show/hide hand button
playerShowHandX = playerProfileX + 20 + (profileWidth - sprite_get_width(spr_button_show_hand));
playerShowHandY = playerProfileY + (profileHeight - sprite_get_height(spr_button_show_hand));
instance_create(
    playerShowHandX,
    playerShowHandY,
    button_showPlayerHand
);


// show graveyard button
showPlayerGraveyardX = playerProfileX + (profileWidth + 4) - sprite_get_width(spr_show_graveyard);
showPlayerGraveyardY = playerProfileY + 90;
instance_create(showPlayerGraveyardX, showPlayerGraveyardY, button_showPlayerGraveyard);





/// ENEMY BUTTONS
// show/hide hand button
showEnemyHandX = enemyProfileX;
showEnemyHandY = enemyProfileY + (profileHeight - sprite_get_height(spr_button_show_hand));
instance_create(
    showEnemyHandX,
    showEnemyHandY,
    button_showEnemyHand
);


// show graveyard button
showEnemyGraveyardX = enemyProfileX - 3;
showEnemyGraveyardY = enemyProfileY + 90;
instance_create(showEnemyGraveyardX, showEnemyGraveyardY, button_showEnemyGraveyard);

// mana count
var manaWidth  = sprite_get_width(spr_mana);
var manaMargin = 4;
var separation = (manaWidth + 4);
mana3X   = (playerProfileX + sprite_get_width(spr_avatars) - separation);
mana2X   = mana3X - separation;
mana1X   = mana2X - separation;
manaY    = playerProfileY + 0;
manaBGx1 = mana1X;
manaBGx2 = mana2X;
manaBGx3 = mana3X;
manaBGy1 = manaY + sprite_get_height(spr_mana);
manaBGy2 = manaBGy1 + 16;
manaCountX = manaBGx1;
manaCountY = manaBGy1;
manaBG3x1 = mana3X;
manaBG2x1 = mana2X;
manaBG1x1 = mana1X;
manaBG3x2 = mana3X + manaWidth;
manaBG2x2 = mana2X + manaWidth;
manaBG1x2 = mana1X + manaWidth;
mana3CountX = mana3X + (manaWidth * 0.5);
mana2CountX = mana2X + (manaWidth * 0.5);
mana1CountX = mana1X + (manaWidth * 0.5);


// enemy mana count
enemy_mana3X   = (enemyProfileX + (manaWidth + separation));
enemy_mana2X   = enemy_mana3X - separation;
enemy_mana1X   = enemy_mana2X - separation;
enemy_manaY    = enemyProfileY + 0;
enemy_manaBGx1 = enemy_mana1X;
enemy_manaBGx2 = enemy_mana2X;
enemy_manaBGx3 = enemy_mana3X;
enemy_manaBGy1 = enemy_manaY + sprite_get_height(spr_mana);
enemy_manaBGy2 = enemy_manaBGy1 + 16;
enemy_manaCountX = enemy_manaBGx1;
enemy_manaCountY = enemy_manaBGy1;
enemy_manaBG3x1 = enemy_mana3X;
enemy_manaBG2x1 = enemy_mana2X;
enemy_manaBG1x1 = enemy_mana1X;
enemy_manaBG3x2 = enemy_mana3X + sprite_get_width(spr_mana);
enemy_manaBG2x2 = enemy_mana2X + sprite_get_width(spr_mana);
enemy_manaBG1x2 = enemy_mana1X + sprite_get_width(spr_mana);
enemy_mana3CountX = enemy_mana3X + (manaWidth * 0.5);
enemy_mana2CountX = enemy_mana2X + (manaWidth * 0.5);
enemy_mana1CountX = enemy_mana1X + (manaWidth * 0.5);


// Create the game phase icons
var phaseIconY      = (room_height * 0.5) - (sprite_get_height(spr_gui_phases) * 0.5);
var phaseIconXStep  = 80;
drawPhaseIcon       = instance_create(20,  phaseIconY, GUI_DrawPhase);
paymentPhaseIcon    = instance_create(drawPhaseIcon.x + phaseIconXStep,  phaseIconY, GUI_PaymentPhase);
mainPhaseIcon       = instance_create(paymentPhaseIcon.x + phaseIconXStep, phaseIconY, GUI_MainPhase);

aftermathPhaseIcon  = instance_create((room_width - 20) - sprite_get_width(spr_gui_phases), phaseIconY, GUI_AftermathPhase);
combatPhaseIcon     = instance_create(aftermathPhaseIcon.x - phaseIconXStep, phaseIconY, GUI_CombatPhase);

phaseSpotlight      = instance_create(0, phaseIconY, PhaseSpotlight);


/// create the marquee
var marqueeX = (room_width * 0.5) - (sprite_get_width(spr_marquee) * 0.5);
var marqueeY = (room_height * 0.5) - (sprite_get_height(spr_marquee) * 0.5);
instance_create(marqueeX, marqueeY, MARQUEE);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the GUI

// draw the crescents
draw_sprite(spr_gui_crescent, 0, playerCrescentX, playerCrescentY);
draw_sprite(spr_gui_crescent, 0, enemyCrescentX, enemyCrescentY);

// Deck Counts
draw_set_font(global.font_Stats);
draw_set_colour(c_orange);
draw_set_halign(fa_center);
draw_sprite(spr_deckcount, 0, playerDeckCounterX, playerDeckCounterY);
draw_text(playerDeckCounterX + 20, playerDeckCounterY + 2, ds_stack_size(global.player.deck.playStack));
draw_sprite(spr_deckcount, 0, enemyDeckCounterX, enemyDeckCounterY);
draw_text(enemyDeckCounterX + 20, enemyDeckCounterY + 2, ds_stack_size(global.enemy.deck.playStack));

// HP
draw_set_halign(fa_center);
draw_set_font(global.font_Health);
draw_set_colour(c_lime);
draw_text(playerHPX, playerHPY, global.player.hp);
draw_text(enemyHPX, enemyHPY, global.enemy.hp);

// draw mana
draw_set_font(global.font_Stats);
draw_sprite(spr_mana, 0, mana1X, manaY);
draw_sprite(spr_mana, 1, mana2X, manaY);
draw_sprite(spr_mana, 2, mana3X, manaY);
draw_set_color(c_black);
draw_rectangle(manaBG1x1, manaBGy1, manaBG1x2, manaBGy2, false);
draw_rectangle(manaBG2x1, manaBGy1, manaBG2x2, manaBGy2, false); 
draw_rectangle(manaBG3x1, manaBGy1, manaBG3x2, manaBGy2, false); 
draw_set_color(c_orange);
draw_text(mana1CountX, manaCountY, global.player.creatureResources);
draw_text(mana2CountX, manaCountY, global.player.spellResources);
draw_text(mana3CountX, manaCountY, global.player.enchantResources);

// draw enemy mana
draw_set_font(global.font_Stats);
draw_sprite(spr_mana, 0, enemy_mana1X, enemy_manaY);
draw_sprite(spr_mana, 1, enemy_mana2X, enemy_manaY);
draw_sprite(spr_mana, 2, enemy_mana3X, enemy_manaY);
draw_set_color(c_black);
draw_rectangle(enemy_manaBG1x1, enemy_manaBGy1, enemy_manaBG1x2, enemy_manaBGy2, false);
draw_rectangle(enemy_manaBG2x1, enemy_manaBGy1, enemy_manaBG2x2, enemy_manaBGy2, false); 
draw_rectangle(enemy_manaBG3x1, enemy_manaBGy1, enemy_manaBG3x2, enemy_manaBGy2, false); 
draw_set_color(c_orange);
draw_text(enemy_mana1CountX, enemy_manaCountY, global.enemy.creatureResources);
draw_text(enemy_mana2CountX, enemy_manaCountY, global.enemy.spellResources);
draw_text(enemy_mana3CountX, enemy_manaCountY, global.enemy.enchantResources);

// reset text
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
